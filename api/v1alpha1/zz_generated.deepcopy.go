//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameServerResourceSpec) DeepCopyInto(out *GameServerResourceSpec) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make(v1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make(v1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameServerResourceSpec.
func (in *GameServerResourceSpec) DeepCopy() *GameServerResourceSpec {
	if in == nil {
		return nil
	}
	out := new(GameServerResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Valheim) DeepCopyInto(out *Valheim) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Valheim.
func (in *Valheim) DeepCopy() *Valheim {
	if in == nil {
		return nil
	}
	out := new(Valheim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Valheim) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimAccessSpec) DeepCopyInto(out *ValheimAccessSpec) {
	*out = *in
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Banned != nil {
		in, out := &in.Banned, &out.Banned
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Permitted != nil {
		in, out := &in.Permitted, &out.Permitted
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimAccessSpec.
func (in *ValheimAccessSpec) DeepCopy() *ValheimAccessSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimBackupSpec) DeepCopyInto(out *ValheimBackupSpec) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	out.Storage = in.Storage
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimBackupSpec.
func (in *ValheimBackupSpec) DeepCopy() *ValheimBackupSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimHooksSpec) DeepCopyInto(out *ValheimHooksSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimHooksSpec.
func (in *ValheimHooksSpec) DeepCopy() *ValheimHooksSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimHooksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimImageSpec) DeepCopyInto(out *ValheimImageSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimImageSpec.
func (in *ValheimImageSpec) DeepCopy() *ValheimImageSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimList) DeepCopyInto(out *ValheimList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Valheim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimList.
func (in *ValheimList) DeepCopy() *ValheimList {
	if in == nil {
		return nil
	}
	out := new(ValheimList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ValheimList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimModSpec) DeepCopyInto(out *ValheimModSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimModSpec.
func (in *ValheimModSpec) DeepCopy() *ValheimModSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimModSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimModsSpec) DeepCopyInto(out *ValheimModsSpec) {
	*out = *in
	out.Storage = in.Storage
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = make(map[string]ValheimModSpec, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimModsSpec.
func (in *ValheimModsSpec) DeepCopy() *ValheimModsSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimModsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimServerSpec) DeepCopyInto(out *ValheimServerSpec) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.AdditionalArgs != nil {
		in, out := &in.AdditionalArgs, &out.AdditionalArgs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalEnv != nil {
		in, out := &in.AdditionalEnv, &out.AdditionalEnv
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimServerSpec.
func (in *ValheimServerSpec) DeepCopy() *ValheimServerSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimServiceSpec) DeepCopyInto(out *ValheimServiceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimServiceSpec.
func (in *ValheimServiceSpec) DeepCopy() *ValheimServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimSpec) DeepCopyInto(out *ValheimSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	out.Image = in.Image
	in.Server.DeepCopyInto(&out.Server)
	out.Service = in.Service
	out.WorldModifiers = in.WorldModifiers
	in.Access.DeepCopyInto(&out.Access)
	in.Backups.DeepCopyInto(&out.Backups)
	out.Storage = in.Storage
	out.Hooks = in.Hooks
	in.Mods.DeepCopyInto(&out.Mods)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimSpec.
func (in *ValheimSpec) DeepCopy() *ValheimSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimStatus) DeepCopyInto(out *ValheimStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimStatus.
func (in *ValheimStatus) DeepCopy() *ValheimStatus {
	if in == nil {
		return nil
	}
	out := new(ValheimStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimStorageSpec) DeepCopyInto(out *ValheimStorageSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimStorageSpec.
func (in *ValheimStorageSpec) DeepCopy() *ValheimStorageSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValheimWorldModifiersSpec) DeepCopyInto(out *ValheimWorldModifiersSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValheimWorldModifiersSpec.
func (in *ValheimWorldModifiersSpec) DeepCopy() *ValheimWorldModifiersSpec {
	if in == nil {
		return nil
	}
	out := new(ValheimWorldModifiersSpec)
	in.DeepCopyInto(out)
	return out
}
